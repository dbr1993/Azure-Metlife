{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "NodeVMSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS2_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2"
      ]
    },
    "NodeName": {
      "type": "string"
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNet"
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the Resource Group containing the existing VNet"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet in the VNet you want to use"
      }
    },
    "AvailablitySet": {
      "type": "string",
      "metadata": {
        "description":  "Name of AvailabilitySet"
      }
    },
    "StorageAccountName": {
      "type": "string"
    },
    "DiagStorageAccountName": {
      "type": "string"
    },
    "PlatformFaultDomainCount":{
      "type": "int",
      "defaultValue": 3,
      "maxValue": 5  
    },
    "PlatformUpdateDomainCount":{
      "type": "int",
      "defaultValue": "9",
      "maxValue": 20
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "7.2",
      "allowedValues": [
        "7.2",
        "6.8",
        "6.7"
      ],
      "metadata": {
        "description": "The OS version for the VM. This will pick the latest available image of this given OS version."
      }
    },
    "PostScript": {
      "type": "string",
      "defaultValue": "AzureMetPost",
      "allowedValues": [
        "AzureMetPost",
        "PostPostwMongo",
        "PostPostwSplunk"
      ]
    },
	"adminUsername": {
      "type": "string"
    },
	"adminPassword": {
      "type": "string"
    },
    "numDataDisks": {
      "type": "int",
      "maxValue": 5,
      "metadata": {
        "description": "This parameter allows the user to select the number of disks they want"
      }
    }
  },
  "variables": {
    "imagePublisher": "RedHat",
    "imageOffer": "RHEL",
    "apiVersion": "2015-06-15",
    "dataDiskSize": "60",
    "osDiskSize":  "64",
    "vnetID": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVirtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",
    "OSDiskName": "[concat(parameters('NodeName'),'-OSDISK')]",
    "dataDiskName": "[concat(parameters('NodeName'),'-DATADISK')]",
    "StorageAccountType": "Standard_LRS",
    "DiagStorageAccountType": "Standard_LRS",
    "vmStorageAccountContainerName": "vhds",
    "datadiskStorageAccount": "[parameters('storageAccountName')]",
    "adminUsername": "[parameters('adminUsername')]",
    "adminPassword": "[parameters('adminPassword')]",
    "osDiskVhdContainer": "[concat('https://', parameters('StorageAccountName'), '.blob.core.windows.net/vhds')]",
    "scriptStorageAccount": "mltemplatestore",
    "scriptStorageAccountKey": "FhA478ObCyW+E0pc4HJV9h3ekaHcaS7yiyd7M4yYGJ4oHMB0GYdAWa01avW7K8IiPK20gy8Jkj5+GaE5ojvnmQ==",
    "diskArray": [
        {
          "name": "[concat(parameters('NodeName'),'-DataDisk0')]",
          "diskSizeGB": "[variables('dataDiskSize')]",
          "lun": 0,
          "vhd": {
            "uri": "[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/',  variables('vmStorageAccountContainerName'),'/',variables('dataDiskName'),'0.vhd')]"
          },
          "createOption": "Empty"
        },
        {
          "name": "[concat(parameters('NodeName'),'-DataDisk1')]",
          "diskSizeGB": "[variables('dataDiskSize')]",
          "lun": 1,
          "vhd": {
            "uri": "[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/',  variables('vmStorageAccountContainerName'),'/',variables('dataDiskName'),'1.vhd')]"
          },
          "createOption": "Empty"
        },
        {
          "name": "[concat(parameters('NodeName'),'-DataDisk2')]",
          "diskSizeGB": "[variables('dataDiskSize')]",
          "lun": 2,
          "vhd": {
            "uri": "[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/',  variables('vmStorageAccountContainerName'),'/',variables('dataDiskName'),'2.vhd')]" 
          },
          "createOption": "Empty"
        },
        {
          "name": "[concat(parameters('NodeName'),'-DataDisk3')]",
          "diskSizeGB": "[variables('dataDiskSize')]",
          "lun": 3,
          "caching": "ReadWrite",
          "vhd": {
            "uri": "[concat('http://', parameters('storageAccountName'),'.blob.core.windows.net/',  variables('vmStorageAccountContainerName'),'/',variables('dataDiskName'),'3.vhd')]" 
          },
          "createOption": "Empty"
        }
    ]
  },
  "resources": [
     {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('DiagStorageAccountName')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('DiagStorageAccountType')]"
      }
    },
    {
      "comments": "# Node Availability Set",
      "type": "Microsoft.Compute/availabilitySets",
      "tags": {
        "EAICODE": "00000"
      },
      "name": "[parameters('AvailablitySet')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "[parameters('PlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[parameters('PlatformUpdateDomainCount')]"
      }
    },
    {
      "comments": "#Nic for Node",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "tags": {
        "EAICODE": "00000"
      },
      "name": "[concat(parameters('NodeName'), '-NIC')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "dnsSettings": {
          "dnsServers": [
            "172.24.225.21",
            "172.24.161.56",
            "172.24.97.34",
            "172.24.33.31"
          ],
          "domainNameLabel": "metlife.com"
        },
        "ipConfigurations": [
          {
            "name": "IPConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "tags": {
        "EAICODE": "00000"
      },
      "name": "[parameters('NodeName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('StorageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('DiagStorageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('AvailablitySet'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('NodeName'), '-NIC'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('AvailablitySet')))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('NodeVMSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('NodeName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('OSDiskName')]",
            "diskSizeGB": "[variables('osDiskSize')]",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), variables('apiVersion')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
         "dataDisks": "[take(variables('diskArray'),parameters('numDataDisks'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('NodeName'), '-NIC'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', parameters('DiagStorageAccountName')), variables('apiVersion')).primaryEndpoints.blob]"
          }
        }
      }

    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[Concat(parameters('NodeName'), '/', parameters('PostScript'))]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('NodeName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat('https://', variables('scriptStorageAccount'), '.blob.core.windows.net/ml-rhel/scripts', '/', parameters('PostScript'), '.sh')]"
          ],
          "commandToExecute": "[concat('sh ', parameters('PostScript'), '.sh')]"

        },
        "protectedSettings": {
          "storageAccountName": "[variables('scriptStorageAccount')]",
          "storageAccountKey": "[variables('scriptStorageAccountKey')]"

        }

      }
    } 
    
    
  ],
  "outputs": {
    "ipAddress": {
        "value": "[reference(resourceId('Microsoft.Network/networkInterfaces',concat(parameters('NodeName'),'-NIC'))).ipConfigurations[0].properties.privateIPAddress]",
        "type": "string"
    }
  }
}
